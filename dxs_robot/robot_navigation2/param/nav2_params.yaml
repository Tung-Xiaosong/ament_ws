amcl:
  ros__parameters:
    alpha1: 0.1
    alpha2: 0.1
    alpha3: 0.1
    alpha4: 0.1
    alpha5: 0.1
    base_frame_id: "base_footprint" #dxs base_link
    beam_skip_distance: 0.5
    beam_skip_error_threshold: 0.9
    beam_skip_threshold: 0.3
    do_beamskip: false
    global_frame_id: "map"
    lambda_short: 0.1
    laser_likelihood_max_dist: 2.0
    laser_max_range: 48.0
    laser_min_range: 0.5
    laser_model_type: "likelihood_field"
    max_beams: 48
    max_particles: 5000
    min_particles: 500
    odom_frame_id: "odom"
    pf_err: 0.05
    pf_z: 0.99
    recovery_alpha_fast: 0.0
    recovery_alpha_slow: 0.0
    resample_interval: 1
    robot_model_type: "nav2_amcl::DifferentialMotionModel"
    save_pose_rate: 0.5
    sigma_hit: 0.2
    tf_broadcast: true
    transform_tolerance: 1.0
    update_min_a: 0.2
    update_min_d: 0.1
    z_hit: 0.5
    z_max: 0.5
    z_rand: 0.5
    z_short: 0.5
    scan_topic: scan
    set_initial_pose: True
    initial_pose:
      x: 0.0
      y: 0.0
      z: 0.0
      yaw: 0.0

amcl_map_client:
  ros__parameters:
    use_sim_time: False

amcl_rclcpp_node:
  ros__parameters:
    use_sim_time: False

bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    robot_base_frame: base_footprint #dxs base_link
    odom_topic: /odom
    default_bt_xml_filename: "navigate_w_replanning_and_recovery.xml"
    bt_loop_duration: 50
    default_server_timeout: 20
    enable_groot_monitoring: True
    groot_zmq_publisher_port: 1666
    groot_zmq_server_port: 1667
    plugin_lib_names:
    - nav2_compute_path_to_pose_action_bt_node
    #- nav2_compute_follow_record_path_action_bt_node
    - nav2_compute_path_through_poses_action_bt_node
    - nav2_follow_path_action_bt_node
    - nav2_back_up_action_bt_node
    - nav2_spin_action_bt_node
    - nav2_wait_action_bt_node
    - nav2_clear_costmap_service_bt_node
    - nav2_is_stuck_condition_bt_node
    - nav2_goal_reached_condition_bt_node
    - nav2_goal_updated_condition_bt_node
    - nav2_initial_pose_received_condition_bt_node
    - nav2_reinitialize_global_localization_service_bt_node
    - nav2_rate_controller_bt_node
    - nav2_distance_controller_bt_node
    - nav2_speed_controller_bt_node
    - nav2_truncate_path_action_bt_node
    - nav2_goal_updater_node_bt_node
    - nav2_recovery_node_bt_node
    - nav2_pipeline_sequence_bt_node
    - nav2_round_robin_node_bt_node
    - nav2_transform_available_condition_bt_node
    - nav2_time_expired_condition_bt_node
    - nav2_distance_traveled_condition_bt_node
    - nav2_single_trigger_bt_node
    - nav2_is_battery_low_condition_bt_node
    - nav2_navigate_through_poses_action_bt_node
    - nav2_navigate_to_pose_action_bt_node
    - nav2_remove_passed_goals_action_bt_node
    - nav2_planner_selector_bt_node
    - nav2_controller_selector_bt_node
    - nav2_goal_checker_selector_bt_node

bt_navigator_rclcpp_node:
  ros__parameters:
    use_sim_time: False

controller_server:
  ros__parameters:
    use_sim_time: False
    controller_frequency: 20.0
    min_x_velocity_threshold: 0.001
    min_y_velocity_threshold: 0.5
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 0.3
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"] 
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.5
      movement_time_allowance: 10.0
    
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.1
      yaw_goal_tolerance: 0.1

    # DWB parameters
    FollowPath:
      plugin: "dwb_core::DWBLocalPlanner"
      debug_trajectory_details: True
      min_vel_x: 0.0
      min_vel_y: 0.0
      max_vel_x: 0.26
      max_vel_y: 0.0
      max_vel_theta: 1.0
      min_speed_xy: 0.0
      max_speed_xy: 0.26
      min_speed_theta: 0.0
      # Add high threshold velocity for turtlebot 3 issue.
      # https://github.com/ROBOTIS-GIT/turtlebot3_simulations/issues/75
      acc_lim_x: 2.5
      acc_lim_y: 0.0
      acc_lim_theta: 3.2
      decel_lim_x: -2.5
      decel_lim_y: 0.0
      decel_lim_theta: -3.2
      vx_samples: 20
      vy_samples: 5
      vtheta_samples: 20
      sim_time: 1.7
      linear_granularity: 0.05
      angular_granularity: 0.025
      transform_tolerance: 0.2
      xy_goal_tolerance: 0.25
      trans_stopped_velocity: 0.25
      short_circuit_trajectory_evaluation: True
      stateful: True
      critics: ["RotateToGoal", "Oscillation", "BaseObstacle", "GoalAlign", "PathAlign", "PathDist", "GoalDist"]
      BaseObstacle.scale: 0.02
      PathAlign.scale: 32.0
      PathAlign.forward_point_distance: 0.1
      GoalAlign.scale: 24.0
      GoalAlign.forward_point_distance: 0.1
      PathDist.scale: 32.0
      GoalDist.scale: 24.0
      RotateToGoal.scale: 32.0
      RotateToGoal.slowing_factor: 5.0
      RotateToGoal.lookahead_time: -1.0

    # TEB parameters
    # FollowPath:
    #   plugin: teb_local_planner::TebLocalPlannerROS

    #   teb_autosize: 1.0
    #   dt_ref: 0.3
    #   dt_hysteresis: 0.1
    #   max_samples: 500
    #   global_plan_overwrite_orientation: True
    #   allow_init_with_backwards_motion: False
    #   max_global_plan_lookahead_dist: 3.0
    #   global_plan_viapoint_sep: 0.0
    #   global_plan_prune_distance: 1.0
    #   control_look_ahead_poses: 2
    #   exact_arc_length: False
    #   feasibility_check_no_poses: 2
    #   publish_feedback: False
          
    #   # Robot    
    #   max_vel_x: 0.5
    #   max_vel_theta: 0.3
    #   acc_lim_x: 0.3
    #   acc_lim_theta: 0.3

    #   footprint_model: # types: "point", "circular", "two_circles", "line", "polygon"
    #     type: "circular"
    #     radius: 0.1 # for type "circular"
        
    #   min_turning_radius: 0.0 # diff-drive robot (can turn on place!)

    #   # GoalTolerance
    #   xy_goal_tolerance: 0.1
    #   yaw_goal_tolerance: 0.1
              
    #   free_goal_vel: False
          
    #   # Obstacles 
    #   min_obstacle_dist: 0.45
    #   inflation_dist: 0.6
    #   include_costmap_obstacles: True
    #   costmap_obstacles_behind_robot_dist: 3.0
    #   obstacle_poses_affected: 15

    #   dynamic_obstacle_inflation_dist: 0.6
    #   include_dynamic_obstacles: True 

    #   costmap_converter_plugin: "costmap_converter::CostmapToPolygonsDBSMCCH"
    #   costmap_converter_spin_thread: True
    #   costmap_converter_rate: 5

    #   # Optimization     
    #   no_inner_iterations: 5
    #   no_outer_iterations: 4
    #   optimization_activate: True
    #   optimization_verbose: False
    #   penalty_epsilon: 0.1
    #   obstacle_cost_exponent: 4.0
    #   weight_max_vel_x: 2.0
    #   weight_max_vel_theta: 1.0
    #   weight_acc_lim_x: 1.0
    #   weight_acc_lim_theta: 10.5
    #   weight_kinematics_nh: 1000.0
    #   weight_kinematics_forward_drive: 1000.0
    #   weight_kinematics_turning_radius: 1.0
    #   weight_optimaltime: 1.0 # must be > 0
    #   weight_shortest_path: 0.0
    #   weight_obstacle: 100.0
    #   weight_inflation: 0.2
    #   weight_dynamic_obstacle: 10.0 # not in use yet
    #   weight_dynamic_obstacle_inflation: 0.2
    #   weight_viapoint: 50.0
    #   weight_adapt_factor: 2.0

    #   # Homotopy Class Planner
    #   enable_homotopy_class_planning: False
    #   enable_multithreading: True
    #   max_number_classes: 4
    #   selection_cost_hysteresis: 5.0
    #   selection_prefer_initial_plan: 1.0
    #   selection_obst_cost_scale: 1.0
    #   selection_alternative_time_cost: True

    #   roadmap_graph_no_samples: 15
    #   roadmap_graph_area_width: 5.0
    #   roadmap_graph_area_length_scale: 1.0
    #   h_signature_prescaler: 0.5
    #   h_signature_threshold: 0.1
    #   obstacle_heading_threshold: 0.45
    #   switching_blocking_period: 0.0
    #   viapoints_all_candidates: True
    #   delete_detours_backwards: True
    #   max_ratio_detours_duration_best_duration: 3.0
    #   visualize_hc_graph: False
    #   visualize_with_time_as_z_axis_scale: 0.0

    #   # Recovery
    #   shrink_horizon_backup: True
    #   shrink_horizon_min_duration: 10.0
    #   oscillation_recovery: True
    #   oscillation_v_eps: 0.1
    #   oscillation_omega_eps: 0.1
    #   oscillation_recovery_min_duration: 10.0
    #   oscillation_filter_duration: 10.0

controller_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: odom
      robot_base_frame: base_footprint #dxs base_link
      use_sim_time: False
      rolling_window: true
      width: 6
      height: 6
      resolution: 0.05
#      robot_radius: 0.22
      footprint: "[[0.31,0.26],[0.31,-0.26],[-0.31,-0.26],[-0.31,0.26]]" 
      plugins: ["static_layer", "obstacle_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        inflation_radius: 1.0
        cost_scaling_factor: 3.0
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan scan1
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
        scan1:
          topic: /scan1
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      always_send_full_costmap: True
  local_costmap_client:
    ros__parameters:
      use_sim_time: False
  local_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 1.0
      publish_frequency: 1.0
      global_frame: map
      robot_base_frame: base_footprint #dxs base_link
      use_sim_time: False
#      robot_radius: 0.22
      footprint: "[[0.31,0.26],[0.31,-0.26],[-0.31,-0.26],[-0.31,0.26]]"     
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan scan1
        scan:
          topic: /scan
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
        scan1:
          topic: /scan1
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 3.0
          raytrace_min_range: 0.0
          obstacle_max_range: 2.5
          obstacle_min_range: 0.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 3.0
        inflation_radius: 0.55
      always_send_full_costmap: True
  global_costmap_client:
    ros__parameters:
      use_sim_time: False
  global_costmap_rclcpp_node:
    ros__parameters:
      use_sim_time: False

map_server:
  ros__parameters:
    use_sim_time: False
    yaml_filename: "map.yaml"

map_saver:
  ros__parameters:
    use_sim_time: False
    save_map_timeout: 5.0
    free_thresh_default: 0.15
    occupied_thresh_default: 0.55
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 20.0
    use_sim_time: False
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_navfn_planner/NavfnPlanner"
      tolerance: 0.5
      use_astar: true
      allow_unknown: false

#planner_server:
#  ros__parameters:
#    expected_planner_frequency: 20.0
#    use_sim_time: False
#    planner_plugins: ["GridBased"]
#
#    GridBased:
#      plugin: "nav2_smac_planner/SmacPlannerHybrid"  # SmacPlannerHybrid SmacPlannerLattice SmacPlanner2D
#      tolerance: 0.5                      
#      downsample_costmap: false           
#      downsampling_factor: 5              
#      allow_unknown: false                
#      max_iterations: 1000000             
#      max_on_approach_iterations: 1000    
#      max_planning_time: 3.5              
#      motion_model_for_search: "DUBIN"    # MOORE, VON_NEUMANN, DUBIN, REEDS_SHEPP, STATE_LATTICE 
#      cost_travel_multiplier: 2.0         
#      angle_quantization_bins: 64         
#      analytic_expansion_ratio: 3.5       
#      analytic_expansion_max_length: 3.0    
#      minimum_turning_radius: 0.05        
#      reverse_penalty: 2.1                
#      change_penalty: 0.0                 
#      non_straight_penalty: 1.20          
#      cost_penalty: 2.0                   
#      retrospective_penalty: 0.025        
#      rotation_penalty: 5.0               
#      lookup_table_size: 20.0               
#      cache_obstacle_heuristic: True       
#      allow_reverse_expansion: True      
#      smooth_path: True                   
#      debug_visualizations: True                
#      smoother:
#        max_iterations: 1000
#        w_smooth: 0.3
#        w_data: 0.2
#        do_refinement: true   

planner_server_rclcpp_node:
  ros__parameters:
    use_sim_time: False

recoveries_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    recovery_plugins: ["spin", "backup", "wait"]
    spin:
      plugin: "nav2_recoveries/Spin"
    backup:
      plugin: "nav2_recoveries/BackUp"
    wait:
      plugin: "nav2_recoveries/Wait"
    global_frame: odom
    robot_base_frame: base_footprint #dxs base_link
    transform_timeout: 0.1
    use_sim_time: False
    simulate_ahead_time: 2.0
    max_rotational_vel: 1.0
    min_rotational_vel: 0.4
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: False

waypoint_follower:
  ros__parameters:
    loop_rate: 200
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"   
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200
